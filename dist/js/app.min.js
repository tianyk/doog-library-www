angular.module("doog.library-www",["ngRoute","ngResource","ngCookies"]).constant("LOGIN_URL","http://accounts.tykhome.com:3000/login/").factory("HttpInterceptor",["$q","$location","$log",function(e,r,o){var t={request:function(e){return e.headers.location=r.absUrl(),e},response:function(e){return e},requestError:function(e){return e},responseError:function(e){return e}};return t}]).factory("AuthInterceptor",["$rootScope","$q","$cookies","$location","$window","$timeout","$log","LOGIN_URL",function(e,r,o,t,n,a,i,u){return{request:function(e){return e.headers.location=t.absUrl(),e.headers=e.headers||{},i.info("X-AUTH-TOKEN",o.get("X-AUTH-TOKEN")),o.get("X-AUTH-TOKEN")&&(e.headers["X-AUTH-TOKEN"]=o.get("X-AUTH-TOKEN")),e},responseError:function(o){var t=o.status;if(401===t){var i=o.headers("location");i&&(i=encodeURIComponent(i)),n.location.href=u+(i?"?redirectURL="+i:"")}else 0!==t&&angular.isUndefined(o.data.errors)&&(o.data.text?e.errorKey=o.data.text:(e.showErrorMsg=!0,a(function(){e.showErrorMsg=!1},5e3)));return r.reject(o)}}}]).factory("authService",["$http",function(e){var r=[],o={ROLE_ADMIN:["/dashboard","/about-us","/authError"],ROLE_USER:["/usersettings","/usersettings/personal","/authError"]};return{userLoggedIn:function(){return!0},userHasRole:function(e){for(var o=0;o<r.length;o++)if(e==r[o])return!0;return!1},isUrlAccessibleForUser:function(e){for(var t=0;t<r.length;t++){var n=r[t],a=o[n];if(a)for(var i=0;i<a.length;i++)if(a[i]==e)return!0}return!1}}}]).config(["$httpProvider",function(e){e.defaults.headers.common["x-Requested-With"]="XMLHttpRequest",e.interceptors.push("AuthInterceptor")}]).config(["$routeProvider","$locationProvider",function(e,r){e.when("/",{templateUrl:"/app/views/home.html",controller:"HomeController"}).when("/login",{templateUrl:"/app/views/login.html",controller:"LoginController"}).when("/help",{templateUrl:"/app/views/help.html",controller:"HelpController"}).when("/not-found",{templateUrl:"/app/views/not_found.html",controller:"NotFoundController"}).otherwise({redirectTo:"/"})}]).run(["$rootScope","$location","$log","$interval","AuthService",function(e,r,o,t,n){var a;e.$on("page:fetch",function(){NProgress.remove(),NProgress.start(),t.cancel(a),a=t(function(){NProgress.inc()},500)}),e.$on("page:change",function(){t.cancel(a),NProgress.done()}),e.$on("$routeChangeStart",function(t,a,i){e.$emit("page:fetch"),o.info("$routeChangeStart"),n.userLoggedIn()||"login.html"===a.templateUrl||r.path("/login")}),e.$on("$routeChangeSuccess",function(r,t,n){e.$emit("page:change"),o.info("$routeChangeSuccess")}),e.$on("$routeChangeError",function(t,n,a,i){e.$emit("page:change"),o.error(n.templateUrl),r.path("/home")}),e.$on("doog.say",function(r,t){o.info(r.name+" "+t),e.$broadcast("doge.say","GO"),e.$emit("root:say")})}]);
angular.module("doog.library-www").controller("HelpController",["$scope","$log","$location","BookService",function(o,n,e,t){o.title="Help",o.$on("doog.say",function(){n.info("我听到 haha了。help.$scope")}),o.$on("doge.say",function(o,e){n.info(o.name+" "+e)}),o.$on("root:say",function(o,e){n.info(o.name+" "+e)}),o.next=function(){e.search({start:(new Date).getTime(),size:10})},o.load=function(){t.express(function(o){n.info(o.length)})}}]);
angular.module("doog.library-www").controller("HomeController",["$scope","$location","$log","BookService","UserService",function(o,n,e,t,a){o.title="Home",o.expressBooks=[],o.popularBooks=[],a.get({id:"7788"},function(n){o.user=n}),t.express(function(n){o.expressBooks=n}),t.popular(function(n){o.popularBooks=n}),o.load=function(){t.express(function(o){e.info(o.length)})},o.$on("$routeChangeStart",function(o,n,e){console.log("$scope $routeChangeStart")}),o.say=function(){o.$emit("doog.say","haha~")},o.$on("doog.say",function(){e.info("我听到 haha了。home.$scope")}),o.$on("doge.say",function(o,n){e.info(o.name+" "+n)}),o.$on("root:say",function(o,n){e.info(o.name+" "+n)})}]);
angular.module("doog.library-www").controller("LoginController",["$scope","$location","$log",function(o,n,i){i.info("location.url: "+n.url()),i.info("location.path: "+n.path()),i.info("location.absUrl: "+n.absUrl()),o.title="Login",o.$on("doog.say",function(){i.info("我听到 haha了。login.$scope")}),o.$on("doge.say",function(o,n){i.info(o.name+" "+n)}),o.$on("root:say",function(o,n){i.info(o.name+" "+n)})}]);
angular.module("doog.library-www").controller("NotFoundController",["$scope","$log",function(o,n){o.title="NotFound",o.$on("doog.say",function(){n.info("我听到 haha了。not_found.$scope")}),o.$on("doge.say",function(o,t){n.info(o.name+" "+t)}),o.$on("root:say",function(o,t){n.info(o.name+" "+t)})}]);
angular.module("doog.library-www").directive("myAccess",["authService","removeElement",function(e,r){return{restrict:"A",link:function(n,o,t){var c=!1,a=t.myAccess.split(" ");for(i=0;i<a.length;i++)if(e.userHasRole(a[i])){c=!0;break}c||(angular.forEach(o.children(),function(e){r(e)}),r(o))}}}]).constant("removeElement",function(e){e&&e.remove&&e.remove()});
angular.module("doog.library-www").service("AuthService",["$http",function(e){this.userLoggedIn=function(){return!0}}]);
angular.module("doog.library-www").factory("BookService",["$resource",function(r){return r("/app/data/books.json",{id:"@Id"},{express:{url:"/app/data/books-express.json",isArray:!0,params:{q:"宫崎骏"}},popular:{url:"/app/data/books-express.json",isArray:!0,params:{q:"宫崎骏"}}})}]);
angular.module("doog.library-www").factory("UserService",["$resource",function(r){return r("http://localhost:3000/users/:id",{id:"@Id"})}]);
//# sourceMappingURL=data:application/json;base64,